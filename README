
**************dieface daemons ****************
Dieface daemons place a die (think Los Vegas) on earth (longitude, latitude) and 
orient it in 3 dimensional space based on its 6 faces.  Standard Orientation is 1 facing up and 2 facing true-north. That means 6 is facing down and 5 is facing south in Standard Orientation.  
There are 24 possible orientations: 6 faces on a die * 4 possible directions (North South East West).
The daemons expect input from 2 sensors: a gps outputting NMEA sentences, and an accelerometer  with output compatible with the fx0s8700.

CAUTION!!  AS REAL DEAMONS, THESE DEAMONS CREATE/REQUIRE FILES IN
LINUX (NORMALLY RESTRICTED) DIRECTORIES!!!
#  /etc/init.d/S50pmtgpsd, S60pmtfxosd, S70pmtdiefaced
#  /usr/sbin/pmtgpsd, pmtfxosd, pmtdiefaced
#  /usr/share/pmt/WMM.COF, calibdata
#  /run/pmtgpsd.pid, pmtfxosd.pid,  pmtdiefaced.pid 
#  /dev/shm/pmtgps, pmtfxos, pmtdieface
#  /var/log/syslog
THE DAEMONS RUN WITH ROOT PRIVILEGES!!
REMEMBER TO DELETE APPROPIATE FILES IF/WHEN REMOVING THESE DAEMONS

THESE DAEMONS WILL START AUTOMATICALLY ON BOOTUP!   
IF STARTING MANUALLY, START ORDER = S50pmtgpsd, S60pmtfxosd, S70pmtdiefaced 
IF STOPPING MANUALLY, STOP ORDER = S70pmtdiefaced, S60pmtfxosd, S50pmtgpsd


*****************************************************************
**************** Daemon Description *****************************

There are 3 daemons (pmtfxosd, pmtdiefaced, pmtgpsd) 
and 2 test processes (testfxosdaemon, testgpsdaemon)
Each source program has compilation instructions 
 for individual testing, and make file for creating deamons.  

pmtfxosd daemon
---------------
    Uses FXO8700 chip magetometer, accelerometer 3+3=6 axis. 
 	puts dieface facing up (1-6), and heading(0-360) 
	into struct PMTfxos (diefaceup, heading).
	PMTfxos is mmapped to /dev/shm/pmtfxos
	defined in pmtfxos.h
    Default if i2c not working: diefaceup=1, heading=0;

pmtgpsd daemon
--------------
    uses LINX chip NMEA Sentences
	Puts struct PMTgps (longitude, latitude, altitude, declination, gmt etc)
	mmapped to /dev/shm/pmtgps
	defined in pmtgps.h
	includes declination calculation NOAA = complex
    Default if LINX chip not working is Percy Lake 
     longlat= 782211W, 451309N, declination=-11.567, 
     date:time=20181031:103005


pmtdiefaced
-----------
  reads diefaceup and converts actions to events
  based on 3 second = steady state. 
    Saves events in struct PMTdieEvent (id, dieface, dieAction)
	mmapped to /dev/shm/pmtdieface
	defined in dieface.h 
	


testfxosdaemon, testgpsdaemon
-----------------------------
    reads current mmapped records in shared memory
	from: /dev/shm/pmtgps  /dev/shm/pmtfxos  /dev/shm/pmtdieface 
	created/updated by daemons pmtfxosd, pmtgpsd, diefaced
	and displays summary information



*****************************************************************
**************** Daemon Structure *****************************

Structure of pmtfxosd daemon (similar in all 3 daemons):
---------------------------------------------------------
S60pmtfxosd = daemon script in /etc/init.d/... S60 says initiate in boot process
pmtfxosd 	= daemon name as specified in S60pmtfxosd script
			= compiled pmtfxosdaemon.c + fxos8700stub.c
			= daemon in /usr/sbin/

pmtfxosdeamon.c ==> starts daemon process for The Big Loop
fxos8700run.c ==> creates mmap file, infinite loop updating mmap
fxosdriver.c ==> FXOS8700 chip interface accelerometer, magnetometer data
ecompass.c ==> convert magnetometer data to compass heading
getdieface.c ==> convert accelerometer data to diefaceup reading
fxos8700.h ==> struct PMTfxos for shared memory record

Each daemon runs independently as a separate process




*****************************************************************
**************** Daemon Installation in rootfs ******************

Run make in each daemon file...  
OR cross compile as per instructions in top lines of src code

THEN
compiled blob: (pmtfxosd, pmtgpsd, pmtdiefaced) ==> /usr/sbin/
start/stop script: (S60pmtfxosd, S50pmtgpsd, S70pmtdiefaced)
	==> /etc/init.d/
generated pid: ( pmtfxosd.pid, pmtgpsd.pid, pmtdiefaced.pid) 
	==> /run  (NO NEED TO INSTALL - FYI ONLY)
WMM.COF (World Magnetic Model data) ==> /usr/share/pmt/WMM.COF
calibration data (generated via calib1.c, calib2.c) ==> /usr/share/pmt/calibdata
FreeSans.ttf ==> /usr/share/fonts/truetype/freefont/FreeSans.ttf  (for SDL2 only)

# INSTALLATION AND TESTING EXAMPLE for pmtfxosd
------------------------------------------------
# sudo cp S60pmtfxosd /etc/init.d/   	## where all daemon scripts stored
# sudo chmod +x /etc/init.d/S60pmtfxosd -v  ##S60 = automatically start on boot
# sudo cp pmtfxosd  /usr/sbin/      ## where all daemons are stored
#
#  /etc/init.d/S60pmtfxosd start  <==> service S60pmtfxosd start
#  service S60pmtfxosd restart  <==>  /etc/init.d/S60pmtfxosd restart   	
#  service S60pmtfxosd stop    		 
#  service --status-all       
#  ps -ef | grep pmt



*****************************************************************
**************** Running/debugging Daemons ******************


RUNNING  DAEMONS (X86 OR ARM)
----------------------------------
sudo service S50pmtgpsd start
sudo service S60pmtfxosd start
sudo service S70pmtdiefaced start
sudo ./viewsensorX86   OR ./viewsensorARM

NOTE
sudo service S60pmtfxosd start  <==>   sudo /etc/init.d/S60pmtfxosd start 

DEBUGGING
ps -ef | grep pmt
cat /var/log/syslog | tail
cat /run/pmtfxosd.pid
ls /dev/shm/pmt*  (pmtgps, pmtfxos, pmtdieface)

STOPPING FAKE DAEMONS (X86 OR ARM)
----------------------------------
sudo service S70pmtdiefaced stop
sudo service S60pmtfxosd stop    		 
sudo service S50pmtgpsd stop
Daemons must be started and stopped properly to prevent a crash
 - see RECOVERY FROM A CRASH - 

************************* RECOVERY FROM A CRASH ************************
ps -ef | grep pmt ==> get list of active pmt daemons and kill -9 them
ls /run/pmt*  ==> get list of pmt-.pid files and delete them 
ls /dev/shm/pmt* ==> get list of share-memory files and delete them 



*****************************************************************
**************** Daemon Removal from Computer ******************
calibration file ==> /usr/
### Don't forget to remove from /etc/init.d/ /usr/sbin/ for daemon removal ######
#  /etc/init.d/S50pmtgpsd, S60pmtfxosd, S70pmtdiefaced
#  /usr/sbin/pmtgpsd, pmtfxosd, pmtdiefaced
#  /usr/share/pmt/WMM.COF, calibdata
#  /run/pmtgpsd.pid, pmtfxosd.pid,  pmtdiefaced.pid 


*****************************************************************
*********** Magnetometer Calibration Explained ******************

When a magnetometer (like the FXOS8700) is rotated 360 degrees on a flat surface, it should produce a set of (x,y) datapoints that form an exact circle centered on (0,0).   Due to electrical and magnetic interference by the surrounding electronics, uncalibrated magetometers,  when rotated 360 degrees produce an ellipse not centered on (0,0). This means all incoming data from the magnetometer must be adjusted (calibrated) so that it forms a circle centred on (0,0). That is calibration.

There are 2 types of calibration: hard iron and soft iron.
Hard iron calibration moves the ellipse created so it is centered on (0,0). For
example, if the ellipse is centered on (122, 86), then hard iron calibration takes every magnetometer (x,y) reading and generates a (x-122, y-86) reading. The ellipse is then centered on (0,0).
Soft iron calibration (often not required) converts the ellipse, centered on (0,0), to a circle. To do this, it rotates the ellipse so it is aligned on the y-axis, then scales the x coordinates to form
a circle, and then rotates the point back so it is pointing in the correct direction.

Note:  HikingGPS calibration is for a flat level 2d surface only. This is NOT a tilt compensated solution documented in many 3d ecompass solutions.  

For magnetometer calibration, HikingGPS uses the file /usr/share/pmt/calibdata, defined in ~/include/pmtgps.h.   To generate this file, run ~/calibrate.  For no calibration, create /usr/share/pmt/calibdata with 1 record containing 0 0 0.0 1.0.  Use ~/calibtest to generate a "circle" of  magnetometer data, paste in a spreadsheet xy chart, and then play with the parameters in /usr/share/pmt/calibdata until you get a perfect circle.  FXOS8700 magnetic data is output as 999.9 uTesla(uT) = 9.999 Gauss.  The earth's magnetic field is 25-65 uTesla or .2-.6 Gauss.

For more details on calibration, see website:
https://www.sensorsmag.com/components/compensating-for-tilt-hard-iron-and-soft-iron-effects




